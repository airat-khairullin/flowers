@function typography-level($font-size, $line-height: 1, $font-weight: normal, $font-family: Graphik) {
  @return (
    font-size: $font-size,
    line-height: $line-height,
    font-weight: $font-weight,
    font-family: $font-family
  );
}

$_default-typography-options: (
  font-family: SFUIDisplay,
  levels: (
    h1: typography-level(14rem, 16rem, 600, SFUIDisplay),
    h2: typography-level(12rem, 14rem, 600, SFUIDisplay),
    h3: typography-level(10rem, 12rem, 600, SFUIDisplay),
    h4: typography-level(8rem, 10rem, 600, SFUIDisplay),
    h5: typography-level(6rem, 8rem, 600, SFUIDisplay),
    h6: typography-level(5rem, 7rem, 600, SFUIDisplay),
    subheading-l: typography-level(8rem, 10rem, 400, SFUIDisplay),
    subheading-m: typography-level(7rem, 9rem, 400, SFUIDisplay),
    subheading-s: typography-level(6rem, 8rem, 400, SFUIDisplay),
    subheading-xs: typography-level(5rem, 7rem, 400, SFUIDisplay),
    body-l: typography-level(4.5rem, 7rem, 400, SFUIDisplay),
    body-m: typography-level(4rem, 6rem, 400, SFUIDisplay),
    body-s: typography-level(3.5rem, 5rem, 400, SFUIDisplay),
    description-l: typography-level(3rem, 4rem, 400, SFUIDisplay),
    description-m: typography-level(2.75rem, 4rem, 400, SFUIDisplay),
    description-s: typography-level(2.5rem, 3rem, 400, SFUIDisplay),
    breakpoints: ()
  )
);

$_nativeElementMap: (
  h1: h1,
  h2: h2,
  h3: h3,
  h4: h4,
  h5: h5,
  h6: h6
);

@mixin typography-level-to-style($config, $default-font-family: null) {
  @if (map-get($config, font-family) == null and $default-font-family != null) {
    $levelConfig: map-merge($config, (font-family: $default-font-family));
  }

  font-size: map-get($config, font-size);
  line-height: map-get($config, line-height);
  font-weight: map-get($config, font-weight);
  font-family: map-get($config, font-family);
}

@mixin typography($options: ()) {
  @if ($options == null) {
    $options: $_default-typography-options;
  }

  $levels: map-merge(map-get($options, levels), map-get($options, levels));
  $levels-breakpoints: map-get($levels, breakpoints);
  $font-family: map-get($options, font-family);

  @if ($font-family != null) {
    * {
      font-family: $font-family;
    }
  }

  @each $levelName, $levelConfig in $levels {
    @if ($levelName != breakpoints) {
      .#{$levelName} {
        @include typography-level-to-style($levelConfig, $font-family);
      }
    }
  }

  .typography {
    @include typography-level-to-style(typography-level(4rem, 6rem, normal, SFUIDisplay));

    @each $levelName, $elementNames in $_nativeElementMap {
      @if (map-has-key($levels, $levelName)) {
        @each $elementName in $elementNames {
          #{$elementName} {
            @include typography-level-to-style(map-get($levels, $levelName), $font-family);
          }
        }
      }
    }

    .u-fw-regular {
      font-weight: 400;
    }

    .u-fw-medium {
      font-weight: 600;
    }
  }

  @each $levelBreakpointsName, $levelBreakpointsConfig in $levels-breakpoints {
    @include breakpoint($levelBreakpointsName) {
      @each $levelName, $levelConfig in $levelBreakpointsConfig {
        .#{$levelName} {
          @include typography-level-to-style($levelConfig, $font-family);
        }
      }
      .typography {
        @each $levelName, $elementNames in $_nativeElementMap {
          @if (map-has-key($levelBreakpointsConfig, $levelName)) {
            @each $elementName in $elementNames {
              #{$elementName} {
                @include typography-level-to-style(map-get($levelBreakpointsConfig, $levelName), $font-family);
              }
            }
          }
        }
      }

      .u-fw-regular {
        font-weight: 400;
      }

      .u-fw-medium {
        font-weight: 600;
      }
    }
  }
}
